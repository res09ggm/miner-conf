#!/usr/bin/env bash
[ -e /opt/miner/miner.conf ] && . /opt/miner/miner.conf

LOG_HOME=/var/log/ethminer
ETH_LOG=ethminer.log
ETH_STAT_LOG=ethstat.log
NVIDIA=false
AMD=false

[ -e /usr/bin/nvidia-smi ] && NVIDIA=true
[ -e /usr/bin/glxinfo ] && AMD=true

getNvGpuCount() {
    local -i gpuCount=0;
    if [ $NVIDIA = true ]; then
        [ -e /usr/bin/nvidia-smi ] && local -i gpuCount=$(/usr/bin/nvidia-smi --list-gpus 2> /dev/null | wc -l)
    fi
    echo $gpuCount
}

floatToInt() {
    local -i int=$(printf "%.0f" "$@" 2>/dev/null)
    local -i status=$?
    [ $status -eq 0 ] && echo ${int}
    return $status
}

getHashStatus() {
    local hash="$(tail -1 ${LOG_HOME}/${LOG_FILE} | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" | awk '{print $4}')"
    local -i hashrate=$(floatToInt ${hash})
    local -i status=$?
    [ $status -eq 0 ] && echo $hashrate
    return $status
}

cudaErrors() {
    echo $(tail -20 ${LOG_HOME}/${LOG_FILE} | sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" | grep -i "Cuda error")
}

ethRestarts() {
    echo $(awk -vDate="`date -d'now-15 min' +%s`" -F " : " '{("date +%s -d\"" $1 "\"") | getline line; if (line > Date) {count++; print $0}}' ${LOG_HOME}/${ETH_STAT_LOG})
}

restartMiner() {
    echo "$(date -Iseconds) : Restarting mining process" >> "${LOG_HOME}/${ETH_STAT_LOG}"
    /opt/miner/scripts/restart_mining.sh
}

main() {
    # create log directory if needed.  This could be our first run since boot
    [ ! -e ${LOG_HOME} ] && mkdir -p "${LOG_HOME}"

    # If process isn't running start mining.
    if [ ! `pgrep ethminer` ]; 
        then restartMiner; 

        # check hash rate
        else
            # Too many restarts in last 15 minutes and cuda errors, restart machine.
            if [ `ethRestarts | wc -l` -gt 3 ] && [ `cudaErrors | wc -l` -gt 2 ]
                then /sbin/shutdown -r now;
            fi
            for i in `seq 1 10`; do
                declare -i hash status
                hash=$(getHashStatus)
                status=$?
                [ $hash -gt 0 ] && [ $status -eq 0 ] && exit 0

                if [ $i -eq 10 ]; then
                    restartMiner
                fi
                sleep 2;
            done;
    fi

    exit 2
}

main
exit $?
